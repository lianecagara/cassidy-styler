declare const numMultipliers: {
    "": number;
    k: number;
    m: number;
    b: number;
    t: number;
    qa: number;
    qi: number;
    sx: number;
    sp: number;
    oc: number;
    no: number;
    dc: number;
    ud: number;
    dd: number;
    td: number;
    qad: number;
    qid: number;
    sxd: number;
    spd: number;
    ocd: number;
    nod: number;
    vg: number;
    uvg: number;
    dvg: number;
    tvg: number;
    qavg: number;
    qivg: number;
    sxvg: number;
    spvg: number;
    ocvg: number;
    novg: number;
    trg: number;
    utrg: number;
    dtrg: number;
    ttrg: number;
    qatrg: number;
    qitrg: number;
    sxtrg: number;
    sptrg: number;
    octrg: number;
    notrg: number;
    qag: number;
    uqag: number;
    dqag: number;
    tqag: number;
    qaqag: number;
    qiqag: number;
    sxqag: number;
    spqag: number;
    ocqag: number;
    noqag: number;
    qig: number;
    uqig: number;
    dqig: number;
    tqig: number;
    qaqig: number;
    qiqig: number;
    sxqig: number;
    spqig: number;
    ocqig: number;
    noqig: number;
    sxg: number;
    usxg: number;
    dsxg: number;
    tsxg: number;
    qasxg: number;
    qisxg: number;
    sxsxg: number;
    spsxg: number;
    ocsxg: number;
    nosxg: number;
    spg: number;
    uspg: number;
    dspg: number;
    tspg: number;
    qaspg: number;
    qispg: number;
    sxspg: number;
    spspg: number;
    ocspg: number;
    nospg: number;
    ocg: number;
    uocg: number;
    docg: number;
    tocg: number;
    qaocg: number;
    qiocg: number;
    sxocg: number;
    spocg: number;
    ococg: number;
    noocg: number;
    nog: number;
    unog: number;
    dnog: number;
    tnog: number;
    qanog: number;
    qinog: number;
    sxnog: number;
    spnog: number;
    ocnog: number;
    nonog: number;
    ctg: number;
    uctg: number;
    ctc: number;
};
declare function parseBet(arg: string | number, totalBalance?: number): number;
declare class ArielIcons {
    static mainArrow: string;
    static info: string;
}
declare function abbreviateNumber(value: number | string, places?: number, isFull?: boolean): string;
declare function formatCash(number: number, emoji?: string, bold?: boolean): string;
declare function formatCash(number: number, bold?: boolean): string;
declare function formatValue(number: number, emoji?: string, bold?: boolean): string;
declare function formatValue(number: number, bold?: boolean): string;
declare function formatTimeSentence(ms: number, showMs?: boolean): string;
declare function getMinimumChange(total: number): number;
declare function isNoChange(change: number, total: number): boolean;

type ArielUtils_ArielIcons = ArielIcons;
declare const ArielUtils_ArielIcons: typeof ArielIcons;
declare const ArielUtils_abbreviateNumber: typeof abbreviateNumber;
declare const ArielUtils_formatCash: typeof formatCash;
declare const ArielUtils_formatTimeSentence: typeof formatTimeSentence;
declare const ArielUtils_formatValue: typeof formatValue;
declare const ArielUtils_getMinimumChange: typeof getMinimumChange;
declare const ArielUtils_isNoChange: typeof isNoChange;
declare const ArielUtils_numMultipliers: typeof numMultipliers;
declare const ArielUtils_parseBet: typeof parseBet;
declare namespace ArielUtils {
  export { ArielUtils_ArielIcons as ArielIcons, ArielUtils_abbreviateNumber as abbreviateNumber, ArielUtils_formatCash as formatCash, ArielUtils_formatTimeSentence as formatTimeSentence, ArielUtils_formatValue as formatValue, ArielUtils_getMinimumChange as getMinimumChange, ArielUtils_isNoChange as isNoChange, ArielUtils_numMultipliers as numMultipliers, ArielUtils_parseBet as parseBet };
}

export { ArielUtils as A, ArielIcons as a, abbreviateNumber as b, formatValue as c, formatTimeSentence as d, formatCash as f, getMinimumChange as g, isNoChange as i, numMultipliers as n, parseBet as p };
